{"version":3,"file":"commonHelpers.js","sources":["../src/js/constants/urls.js","../src/js/services/apiServices.js","../src/js/services/moviesServices.js","../src/moviesList/moviesList.js","../src/js/home/home.js"],"sourcesContent":["const baseURL = 'https://api.themoviedb.org/3'\nconst api_key = '82b205270d637f8e7c805273646956b7'\nconst movies = '/discover/movie'\nconst genre = '/genre/movie/list'\nconst defaultUrlImage = 'https://image.tmdb.org/t/p/w200/'\n\nexport {\n  baseURL,\n  api_key,\n  movies,\n  defaultUrlImage,\n  genre,\n}","import axios from \"axios\";\n\nimport {baseURL, api_key} from \"../constants/urls.js\";\n\nconst params = {\n  api_key,\n}\n\nconst apiService = axios.create({baseURL, params});\n\nexport {\n  apiService,\n}\n","import { apiService } from './apiServices.js';\nimport { genre, movies } from '../constants/urls.js';\n\nconst getAllMovies = async (page = 1) => {\n  const { data } = await apiService(`${movies}?page=${page}`);\n\n  return data;\n};\n\nconst getGenres = async () => {\n  const { data } = await apiService(`${genre}`);\n\n  return data;\n};\n\nexport { getAllMovies, getGenres };\n","import { defaultUrlImage } from '../js/constants/urls.js';\n\nconst movieListEl = document.querySelector('.movies-list');\n\nconst moviesList = (movies, genres) => {\n  const markup = movies\n    .map(({ title, poster_path, genre_ids, release_date }) => {\n      const genresNameList = genres\n        .filter(el => genre_ids.includes(el.id))\n        .map(el => el.name)\n        .join(', ');\n\n      const releaseYear = release_date.split('-')[0];\n\n      return `\n    <li class=\"movies-item\">\n      <img class=\"movies-img\" src=\"${defaultUrlImage + poster_path}\" alt=\"\"/>\n      <p class=\"movies-title\">${title}</p>\n        <p class=\"movies-text\">${genresNameList} | ${releaseYear}</p>\n    </li>\n    `;\n    })\n    .join('');\n\n  movieListEl.insertAdjacentHTML('beforeend', markup);\n};\n\nexport { moviesList };\n","import { getAllMovies, getGenres } from '../services/moviesServices.js';\nimport { moviesList } from '../../moviesList/moviesList.js';\n\nconst getMovies = async () => {\n  try {\n    const { page, total_page, results } = await getAllMovies(1);\n    const { genres } = await getGenres();\n\n    if (results.length > 0) {\n      moviesList(results, genres);\n    }\n  } catch (err) {\n    console.log(err.message);\n  }\n};\n\nvoid getMovies();\n"],"names":["baseURL","api_key","movies","genre","defaultUrlImage","params","apiService","axios","getAllMovies","page","data","getGenres","movieListEl","moviesList","genres","markup","title","poster_path","genre_ids","release_date","genresNameList","el","releaseYear","getMovies","total_page","results","err"],"mappings":"svBAAA,MAAMA,EAAU,+BACVC,EAAU,mCACVC,EAAS,kBACTC,EAAQ,oBACRC,EAAkB,mCCAlBC,EAAS,CACb,QAAAJ,CACF,EAEMK,EAAaC,EAAM,OAAO,CAAC,QAAAP,EAAS,OAAAK,CAAM,CAAC,ECL3CG,EAAe,MAAOC,EAAO,IAAM,CACvC,KAAM,CAAE,KAAAC,GAAS,MAAMJ,EAAW,GAAGJ,CAAM,SAASO,CAAI,EAAE,EAE1D,OAAOC,CACT,EAEMC,EAAY,SAAY,CAC5B,KAAM,CAAE,KAAAD,CAAI,EAAK,MAAMJ,EAAW,GAAGH,CAAK,EAAE,EAE5C,OAAOO,CACT,ECXME,EAAc,SAAS,cAAc,cAAc,EAEnDC,EAAa,CAACX,EAAQY,IAAW,CACrC,MAAMC,EAASb,EACZ,IAAI,CAAC,CAAE,MAAAc,EAAO,YAAAC,EAAa,UAAAC,EAAW,aAAAC,CAAY,IAAO,CACxD,MAAMC,EAAiBN,EACpB,OAAOO,GAAMH,EAAU,SAASG,EAAG,EAAE,CAAC,EACtC,IAAIA,GAAMA,EAAG,IAAI,EACjB,KAAK,IAAI,EAENC,EAAcH,EAAa,MAAM,GAAG,EAAE,CAAC,EAE7C,MAAO;AAAA;AAAA,qCAEwBf,EAAkBa,CAAW;AAAA,gCAClCD,CAAK;AAAA,iCACJI,CAAc,MAAME,CAAW;AAAA;AAAA,KAGhE,CAAK,EACA,KAAK,EAAE,EAEVV,EAAY,mBAAmB,YAAaG,CAAM,CACpD,ECtBMQ,EAAY,SAAY,CAC5B,GAAI,CACF,KAAM,CAAE,KAAAd,EAAM,WAAAe,EAAY,QAAAC,CAAS,EAAG,MAAMjB,EAAa,CAAC,EACpD,CAAE,OAAAM,CAAM,EAAK,MAAMH,IAErBc,EAAQ,OAAS,GACnBZ,EAAWY,EAASX,CAAM,CAE7B,OAAQY,EAAK,CACZ,QAAQ,IAAIA,EAAI,OAAO,CACxB,CACH,EAEKH,EAAW"}