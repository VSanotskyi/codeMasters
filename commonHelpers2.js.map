{"version":3,"file":"commonHelpers2.js","sources":["../src/js/header/my-library-header-watched.js","../src/js/header/my-library-header-queue.js"],"sourcesContent":["import apiService from '../services/apiServices.js';\nimport urls from '../constants/urls.js';\nimport storageKey from '../constants/storageKey.js';\n\nconst watchedBtn = document.querySelector('.js-watched');\nconst queuedBtn = document.querySelector('.js-queue');\nconst moviesList = document.querySelector('.movies-list');\n\nwatchedBtn.addEventListener('click', showWatchedMovie);\n\nconst watchedMoviesJson = localStorage.getItem('watched');\nconst watchedMoviesIdArr = JSON.parse(watchedMoviesJson);\n\nshowWatchedMovie();\n\nasync function showWatchedMovie() {\n  const moviesArr = [];\n  queuedBtn.classList.remove('active');\n  watchedBtn.classList.add('active');\n  try {\n    for (let i = 0; i < watchedMoviesIdArr.length; i++) {\n      const data = await getMoviesById(watchedMoviesIdArr[i]);\n      moviesArr.push(data);\n    }\n    renderMovies(moviesArr);\n    if (!moviesArr.length) {\n      moviesList.innerHTML = `<p class=\"empty-list-text\">There's nothing here yet. Please add movies to your list</p>`;\n    }\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nasync function getMoviesById(id) {\n  const { data } = await apiService(`${urls.movieDetailsEndPoint}/${id}`);\n  return data;\n}\n\nfunction renderMovies(movies) {\n  const genresStore = JSON.parse(localStorage.getItem(storageKey.GENRES_KEY));\n\n  moviesList.innerHTML = movies\n    .map(({ title, poster_path, genres, release_date, id }) => {\n      const imgPath =\n        poster_path === null\n          ? defaultImage\n          : urls.defaultUrlImage + poster_path;\n      const releaseYear = release_date.split('-')[0];\n      const genresNameList = genresStore\n        .filter(el => genres.includes(el.id))\n        .map(el => el.name)\n        .join(', ');\n\n      return `\n        <li class=\"movies-item\" data-id=\"${id}\">\n          <img class=\"movies-img\" src=\"${imgPath}\" alt=\"${title}\" loading=\"lazy\"/>\n          <p class=\"movies-title overflowWrap\">${title}</p>\n          <p class=\"movies-text overflowWrap\">${genresNameList} | ${releaseYear}</p>\n        </li>\n      `;\n    })\n    .join('');\n}\n","import apiService from '../services/apiServices.js';\nimport urls from '../constants/urls.js';\nimport storageKey from '../constants/storageKey.js';\n\nconst queuedBtn = document.querySelector('.js-queue');\nconst watchedBtn = document.querySelector('.js-watched');\nconst moviesList = document.querySelector('.movies-list');\n\nqueuedBtn.addEventListener('click', showQueuedMovie);\n\nconst queueMoviesJson = localStorage.getItem('queue');\nconst queuedMoviesIdArr = JSON.parse(queueMoviesJson);\n\nasync function showQueuedMovie() {\n  const moviesArr = [];\n  watchedBtn.classList.remove('active');\n  queuedBtn.classList.add('active');\n  try {\n    for (let i = 0; i < queuedMoviesIdArr.length; i++) {\n      const data = await getMoviesById(queuedMoviesIdArr[i]);\n      moviesArr.push(data);\n    }\n    renderMovies(moviesArr);\n\n    if (!moviesArr.length) {\n      moviesList.innerHTML = `<p class=\"empty-list-text\">There's nothing here yet. Please add movies to your list</p>`;\n    }\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nasync function getMoviesById(id) {\n  const { data } = await apiService(`${urls.movieDetailsEndPoint}/${id}`);\n  return data;\n}\n\nfunction renderMovies(movies) {\n  const genresStore = JSON.parse(localStorage.getItem(storageKey.GENRES_KEY));\n\n  moviesList.innerHTML = movies\n    .map(({ title, poster_path, genres, release_date, id }) => {\n      const imgPath =\n        poster_path === null\n          ? defaultImage\n          : urls.defaultUrlImage + poster_path;\n      const releaseYear = release_date.split('-')[0];\n      const genresNameList = genresStore\n        .filter(el => genres.includes(el.id))\n        .map(el => el.name)\n        .join(', ');\n\n      return `\n        <li class=\"movies-item\" data-id=\"${id}\">\n          <img class=\"movies-img\" src=\"${imgPath}\" alt=\"${title}\" loading=\"lazy\"/>\n          <p class=\"movies-title overflowWrap\">${title}</p>\n          <p class=\"movies-text overflowWrap\">${genresNameList} | ${releaseYear}</p>\n        </li>\n      `;\n    })\n    .join('');\n}\n"],"names":["watchedBtn","queuedBtn","moviesList","showWatchedMovie","watchedMoviesJson","watchedMoviesIdArr","moviesArr","i","data","getMoviesById","renderMovies","id","apiService","urls","movies","genresStore","storageKey","title","poster_path","genres","release_date","imgPath","releaseYear","genresNameList","el","showQueuedMovie","queueMoviesJson","queuedMoviesIdArr"],"mappings":"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"}